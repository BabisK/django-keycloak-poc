"""
Django settings for django_keycloack_poc project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
import os
import struct
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
from cryptography.hazmat.primitives.serialization import load_der_public_key, \
    load_pem_public_key

BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-qa#@1cs@&xctd1wthfe878!$1=46-qz62)jp@*5tu_ksd6ntx7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'mozilla_django_oidc',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'app',
    'drftest',
    'perm'
]

AUTHENTICATION_BACKENDS = (
    'mozilla_django_oidc.auth.OIDCAuthenticationBackend',
)

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'mozilla_django_oidc.middleware.SessionRefresh',
]

ROOT_URLCONF = 'django_keycloack_poc.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_keycloack_poc.wsgi.application'


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'mozilla_django_oidc.contrib.drf.OIDCAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
}

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

OIDC_AUTH_URI = 'http://localhost:8080/auth/realms/default'

OIDC_RP_CLIENT_ID = os.getenv('OIDC_RP_CLIENT_ID', "poc")
OIDC_RP_CLIENT_SECRET = os.getenv('OIDC_RP_CLIENT_SECRET', "3582fedc-3bd1-4f76-82ff-87224a182c16")
OIDC_OP_AUTHORIZATION_ENDPOINT = OIDC_AUTH_URI + '/protocol/openid-connect/auth'
OIDC_OP_TOKEN_ENDPOINT = OIDC_AUTH_URI + '/protocol/openid-connect/token'
OIDC_OP_USER_ENDPOINT = OIDC_AUTH_URI + '/protocol/openid-connect/userinfo'
OIDC_OP_JWKS_ENDPOINT = OIDC_AUTH_URI + '/protocol/openid-connect/certs'
# pem_prefix = '-----BEGIN PUBLIC KEY-----\n'
# pem_suffix = '\n-----END PUBLIC KEY-----'
# pem = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgaIgxGbjtR5TY5kPqTfbFWrs2Hv/CVMhhPiEZNW/olCkuw+SeDlIlpVSt4EQu/oPDV2W4rz1KK+o8GDVHE2Z6KL6REPJgPXmM420Gd4unCo/FU0JfjW16VrLJKl0+R+3l8lzPQBDwTqi7lWlcH/S6E7X31tJTCvMU0HgIIviF/34/1IZJtXCRph0+WvaYIEwlGun/LpPdK4hjdzUIEMP1/2g6EEbLM7ghlkcbF/3XSIwnvHHxSB8c8KBsnEQEAOGrdkl3SGmdWocConHsCjtub12ztkJvQjSrZ1oVN7WOqnbiHjUhRIyv30Pr2+Wkd01PPfyuwCnJkD2TrO0IBlWxwIDAQAB"
# key = "{}{}{}".format(pem_prefix, pem, pem_suffix)
# OIDC_RP_IDP_SIGN_KEY is used to validate the JWT tokens offline, without
# connecting to Keycloak. This has the obvious benefit of lower latency and
# less traffic to the IdP. But it also means that if the key is changed on the
# IdP, the application must learn and load the new key.
# To get the key from Keycloak navigate to "Realm Settings" -> "Keys" and get
# the "Public Key" of the "RS256" algorithm with "SIG" use indication. Then
# wrap it between the PEM header and tail. It should look like this:
# -----BEGIN PUBLIC KEY-----
# MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAgaIgxGb...
# -----END PUBLIC KEY-----
# OIDC_RP_IDP_SIGN_KEY = key
OIDC_RP_SIGN_ALGO = "RS256"
OIDC_RP_SCOPES = "openid profile email"
LOGIN_REDIRECT_URL = "http://localhost:8001/accounts/profile/"
LOGOUT_REDIRECT_URL = "http://localhost:8001/accounts/login/"
OIDC_STORE_ACCESS_TOKEN = True